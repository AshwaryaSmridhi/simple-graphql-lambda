service: simple-project

plugins:
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 1024
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2

functions: 
  check-valid-string:
    handler: src/handlers/check-valid-string/check-valid-string.handler
    events: 
      - http: 
          path: check/dog/breed/{breed}
          method: get
          cors: true
  
  slack-notifications: 
    handler: src/handlers/slack-notification/slack-notification.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sns:Publish
        Resource:
          - Ref: NotifySlackSns
    events: 
      - sns: 
          arn: 
            Ref: NotifySlackSns
          topicName: ${self:service}-${self:provider.stage}-NotifySlackSns

resources: 
  Resources:
    NotifySlackSns:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: ${self:service}-${self:provider.stage}-NotifySlackSns

    CheckValidStringErrorFilter: 
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName:
          Ref: 'CheckDashvalidDashstringLogGroup'
        FilterPattern: '{$.level = "Error"}'
        MetricTransformations:
          -
            MetricValue: '1'
            MetricNamespace: 'LogMetrics'
            MetricName: '${self:service}-${self:provider.stage}-CheckValidStringError'

    CheckValidStringErrorAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-${self:provider.stage}-CheckValidStringError
        AlarmDescription: Lambda alarm
        Namespace: LogMetrics
        MetricName: ${self:service}-${self:provider.stage}-CheckValidStringError
        Statistic: Sum
        ComparisonOperator: GreaterThanThreshold
        Threshold: 0
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: NotifySlackSns